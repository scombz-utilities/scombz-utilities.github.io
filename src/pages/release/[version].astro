---
import {
  releaseNotes,
  betaReleaseNote,
  type ReleaseNote,
} from "../../releaseNote";
import Layout from "../../layouts/Layout.astro";
import { css } from "../../../styled-system/css";
import { format } from "date-fns";
import "../../index.css";

export const getStaticPaths = () => {
  return [...releaseNotes, ...betaReleaseNote].map((releaseNote) => {
    return {
      params: {
        version: releaseNote.version,
      },
    };
  });
};

const releaseNote = [...releaseNotes, ...betaReleaseNote].find(
  (releaseNote) => releaseNote.version === Astro.params.version,
) as ReleaseNote;

const { version } = Astro.params;
---

<Layout title={`リリースノート ${version}`}>
  <div class={css({ padding: 4 })}>
    <h1 class={css({ padding: 2, fontSize: "150%", mb: 0 })}>
      ScombZ Utilities ver.{version} - リリースノート
    </h1>
    <div class={css({ p: 4, fontSize: "120%" })}>
      {
        releaseNote.description &&
          releaseNote.description.map((desc) => (
            <p
              set:html={desc.replace(
                /\[([^\]]+)\]\(([^)]+)\)/g,
                (_, text, url) => {
                  return `
                  <a class="${css({
                    color: "{colors.indigo.600}",
                    textDecoration: "underline",
                  })}" href="${url}">${text}</a>`;
                },
              )}
            />
          ))
      }
    </div>
    {
      releaseNote.date && (
        <div class={css({ p: 4, fontSize: "120%" })}>
          <p>Chrome: {format(releaseNote.date.chrome, "yyyy/MM/dd")}</p>
          <p>FireFox: {format(releaseNote.date.firefox, "yyyy/MM/dd")}</p>
        </div>
      )
    }
    <div class={css({ px: 4 })}>
      <h2
        class={css({
          fontWeight: "bold",
          fontSize: "120%",
          mt: 4,
          mb: 2,
        })}
      >
        変更点
      </h2>
      <ul>
        {
          releaseNote.contents.map((change) => (
            <div class={css({ py: 2 })}>
              <h3
                class={css({ fontSize: "110%", textDecoration: "underline" })}
              >
                {change.title}
              </h3>
              <p class={css({ p: 2 })}>{change.explain}</p>
            </div>
          ))
        }
      </ul>
    </div>
  </div>
</Layout>
