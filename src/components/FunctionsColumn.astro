---
import { css } from "../../styled-system/css";
import "@fontsource/zen-kaku-gothic-new";

interface Props {
  title: string;
  description: string | string[];
  image: string;
  direction?: "left" | "right";
  noBoxShadow?: boolean;
}

const {
  title,
  description,
  image,
  direction = "left",
  noBoxShadow = false,
} = Astro.props;
---

<div
  class={css({
    display: "block",
    width: "100%",
    md: { display: "none" },
    boxShadow: noBoxShadow ? "none" : "0 0 10px rgba(0, 0, 0, 0.2)",
    borderRadius: noBoxShadow ? "0" : "8px",
  })}
>
  <div class={css({ px: "1.5rem", py: "1rem" })}>
    <h2
      class={css({
        fontWeight: "bold",
        fontSize: "110%",
        fontFamily: "Zen Kaku Gothic New",
      })}
    >
      {title}
    </h2>
    <div class={css({ py: "1rem" })}>
      {
        Array.isArray(description) ? (
          description.map((desc) => (
            <p
              class={css({
                fontSize: "90%",
                fontFamily: "Zen Kaku Gothic New",
              })}
            >
              {desc}
            </p>
          ))
        ) : (
          <p
            class={css({
              fontSize: "90%",
              fontFamily: "Zen Kaku Gothic New",
            })}
          >
            {description}
          </p>
        )
      }
    </div>
  </div>
  <div>
    <img
      src={image}
      alt="slide image"
      class={css({
        display: "flex",
        justifyContent: "center",
        borderRadius: noBoxShadow ? "0" : "0 0 8px 8px",
      })}
    />
  </div>
</div>

<div
  class={css({
    display: "none",
    gridTemplateColumns: "100%",
    width: "100%",
    md: {
      gridTemplateColumns: direction === "left" ? "45% 55%" : "55% 45%",
      display: "grid",
    },
  })}
>
  {
    direction === "right" && (
      <div>
        <img
          src={image}
          alt="slide image"
          class={css({
            display: "flex",
            justifyContent: "center",
            borderRadius: "8px",
            boxShadow: "0 0 10px rgba(0, 0, 0, 0.2)",
          })}
        />
      </div>
    )
  }
  <div
    class={css({
      px: "1rem",
      py: "1rem",
      display: "flex",
      flexDirection: "column",
      justifyContent: "center",
      md: { px: "2rem" },
    })}
  >
    <h2
      class={css({
        fontWeight: "bold",
        fontSize: "120%",
        fontFamily: "Zen Kaku Gothic New",
      })}
    >
      {title}
    </h2>
    <div class={css({ py: "1rem" })}>
      {
        Array.isArray(description) ? (
          description.map((desc) => (
            <p
              class={css({
                fontSize: "100%",
                fontFamily: "Zen Kaku Gothic New",
              })}
            >
              {desc}
            </p>
          ))
        ) : (
          <p
            class={css({
              fontSize: "90%",
              fontFamily: "Zen Kaku Gothic New",
            })}
          >
            {description}
          </p>
        )
      }
    </div>
  </div>
  {
    direction === "left" && (
      <div>
        <img
          src={image}
          alt="slide image"
          class={css({
            display: "flex",
            justifyContent: "center",
            borderRadius: "8px",
            boxShadow: "0 0 10px rgba(0, 0, 0, 0.2)",
          })}
        />
      </div>
    )
  }
</div>
